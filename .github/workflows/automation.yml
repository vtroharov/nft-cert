name: NFT Creation

on:
  push:
    branches:
      - main

jobs:
   store_assets:
    name: Create Contract, Store Assets and Mint NFTs
    runs-on: ubuntu-latest
    env:
      NFT_STORAGE_API_KEY: ${{ secrets.NFT_STORAGE_API_KEY }}
      NETWORK_API_URL: ${{ secrets.NETWORK_API_URL }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      MINT_TO_WALLET: ${{ secrets.MINT_TO_WALLET }}

    steps:
      - uses: actions/checkout@v2

      # PART 1 Create Environment and Initiate Contract ===========================

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - run: npm install

      - name: Store contract asset
        run: echo "::set-output name=CONTRACT_META::$(node ./scripts/store-assets-contract.mjs)"
        id: metadata

      - name: Modify Contract Naming
        run: echo "::set-output name=CONTRACT_NAME::$(node ./scripts/modify-contract.mjs)"
        env: 
          CONTRACT_META: ${{ steps.metadata.outputs.CONTRACT_META }}
        id: contract_name

      # PART 1 COMPLETED ==========================================================
      # PART 2 Create and Verify Contract =========================================
      # Comment this Section if you are using an already created contract

      - name: Create Contract
        run: |
          # Compile the contract
          npx hardhat compile
          echo "::set-output name=CONTRACT_ADDRESS::$(npx hardhat run ./scripts/deploy.js)"
        env:
          CONTRACT_NAME: ${{ steps.contract_name.outputs.CONTRACT_NAME }}
        id: contract
      
      - name: Display Contract Address
        run: echo "Contract Address is ${{ steps.contract.outputs.CONTRACT_ADDRESS }}"
      
      - name: Sleep for 75s for contract to propagate to the network
        run: sleep 75s
        shell: bash

      - name: Verify Contract is Created
        run: npx hardhat verify ${{ steps.contract.outputs.CONTRACT_ADDRESS }}

      # PART 2 COMPLETED ==========================================================
      # PART 3 Store NFT Media and Metadata =======================================
      # This section is required even if the NFTs are already uploaded to create
      # the necessary files required for Minting

      - name: Store current asset
        run: node scripts/store-assets.mjs

      - name: Copy Assets
        run: cp ./meta_uri.json meta_uri_copy.json

      - name: Get Total assets
        run: echo "total=`jq '. | length' meta_uri.json`" >> $GITHUB_ENV

      # PART 3 COMPLETED ==========================================================
      # PART 4 Minting the NFTs ===================================================

      - name: Mint Multiple Assets
        run: |
          for ((i=0; i<${total}; i++ ))
          do
            npx hardhat run scripts/mint-nft-send.mjs
          done
          echo "NFTs Minted to address: ${MINT_TO_WALLET}"
        env:
          CONTRACT_NAME: ${{ steps.contract_name.outputs.CONTRACT_NAME }}
        # If you are creating a new contract, uncomment the below line
          CONTRACT_ADDRESS: ${{ steps.contract.outputs.CONTRACT_ADDRESS }}
        # If you are using an already create contract, uncomment the below line 
        #  CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}

      # - name: Batch Minting
      #   run: npx hardhat run --network ${NETWORK} scripts/mint-batch-nft-send.mjs
      #   env:
          #  CONTRACT_NAME: ${{ steps.contract_name.outputs.CONTRACT_NAME }}
          # If you are creating a new contract, uncomment the below line
          #  CONTRACT_ADDRESS: ${{ steps.contract.outputs.CONTRACT_ADDRESS }}
          # If you are using an already create contract, uncomment the below line 
          #  CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}

      - name: Sleep for 60s for NFTs to propagate to the network
        run: sleep 60s
        shell: bash

      # PART 4 COMPLETED ==========================================================
      # PART 5 Verifying the NFTs =================================================

      - name: Verify NFTs in Destination Wallet
        run: node scripts/verify-nfts.mjs
        env:
        # If you are creating a new contract, uncomment the below line
          CONTRACT_ADDRESS: ${{ steps.contract.outputs.CONTRACT_ADDRESS }}
        # If you are using an already create contract, uncomment the below line 
        #  CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}

      # PART 5 COMPLETED ==========================================================